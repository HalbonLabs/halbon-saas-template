name: Checks - Semantic PR Title

on:
  pull_request:
    types: [opened, edited, synchronize, reopened]

permissions:
  contents: read
  pull-requests: read

jobs:
  lint-title:
    if: ${{ github.actor != 'renovate[bot]' && github.actor != 'dependabot[bot]' }}
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR title follows Conventional Commits
        env:
          PR_TITLE: ${{ github.event.pull_request.title }}
        shell: bash
        run: |
          set -euo pipefail
          node - <<'NODE'
          const title = process.env.PR_TITLE || '';
          // Conventional Commits: type(scope)?(!)?: subject
          const regex = /^(build|ci|docs|feat|fix|perf|refactor|revert|style|test|chore)(\([\w\-.]+\))?(!)?:\s.+/;
          if (!regex.test(title)) {
            console.error(`PR title is not semantic.\n` +
              `Received: "${title}"\n\n` +
              `Expected format: type(scope)?: subject\n` +
              `Allowed types: build, ci, docs, feat, fix, perf, refactor, revert, style, test, chore`);
            process.exit(1);
          }
          console.log('PR title OK:', title);
          NODE

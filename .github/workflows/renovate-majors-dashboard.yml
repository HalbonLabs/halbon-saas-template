name: Automation - Renovate Majors Dashboard

on:
  schedule:
    - cron: '5 8 * * 1' # Mondays at 08:05 UTC
  workflow_dispatch: {}

concurrency:
  group: renovate-majors-dashboard
  cancel-in-progress: true

permissions:
  issues: write
  contents: read
  pull-requests: read

jobs:
  build-dashboard:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: Ensure labels exist
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          gh label create dependencies --color 0366d6 --description "Dependency updates" --force || true
          gh label create major --color d93f0b --description "Major updates" --force || true
          gh label create dashboard --color 0e8a16 --description "Automation dashboard issues" --force || true
      - name: Generate majors dashboard issue body
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          command -v gh >/dev/null 2>&1 || { echo 'gh not found'; exit 1; }
          command -v jq >/dev/null 2>&1 || { echo 'jq not found'; exit 1; }
          tmpfile=$(mktemp)
          echo "# Renovate: Majors Review" > "$tmpfile"
          echo >> "$tmpfile"
          echo "This issue summarizes all open Renovate PRs for major upgrades that need manual review." >> "$tmpfile"
          echo >> "$tmpfile"
          echo "- Updated: $(date -u +'%Y-%m-%d %H:%M UTC')" >> "$tmpfile"
          echo >> "$tmpfile"

          # List open PRs labeled major+dependencies from Renovate
          prs_json=$(gh pr list --repo "$GITHUB_REPOSITORY" --search "label:major label:dependencies author:app/renovate is:open" --limit 200 --json number,title,updatedAt,labels,url,mergeable,autoMergeRequest || echo '[]')
          count=$(jq 'length' <<<"$prs_json" 2>/dev/null || echo 0)

          if [[ "$count" -eq 0 ]]; then
            echo "No open major Renovate PRs right now." >> "$tmpfile"
          else
            echo "Open major Renovate PRs (count: $count):" >> "$tmpfile"
            echo >> "$tmpfile"
            echo "$prs_json" | jq -r '.[] | "- PR #\(.number): [\(.title)](\(.url))\n  - Updated: \(.updatedAt)\n  - Labels: \(.labels | map(.name) | join(", "))\n  - Mergeable: \(.mergeable)  AutoMerge: \(.autoMergeRequest != null)\n"' >> "$tmpfile"
          fi

          mv "$tmpfile" majors.md

      - name: Create or update dashboard issue
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          existing=$(gh issue list --repo "$GITHUB_REPOSITORY" --search "in:title 'Renovate: Majors Review'" --limit 1 --json number,state 2>/dev/null | jq -r '.[0].number // empty')
          if [[ -n "$existing" ]]; then
            gh issue edit "$existing" \
              --title "Renovate: Majors Review" \
              --body-file majors.md \
              --add-label dependencies --add-label major --add-label dashboard \
              --reopen || true
          else
            gh issue create \
              --title "Renovate: Majors Review" \
              --body-file majors.md \
              --label dependencies --label major --label dashboard
          fi
